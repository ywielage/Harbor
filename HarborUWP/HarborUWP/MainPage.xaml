<Page
    x:Class="HarborUWP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HarborUWP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_DataGrid_XamlTypeInfo"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <Style x:Key="ListViewItemContainerStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckMode="{ThemeResource ListViewItemCheckMode}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" ContentTransitions="{TemplateBinding ContentTransitions}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid HorizontalAlignment="Left" Width="1500" x:Name="containerGrid" x:FieldModifier="public">
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="70"/>
            <RowDefinition Height="560"/>
            <RowDefinition Height="300"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="740"/>
            <ColumnDefinition Width="380"/>
            <ColumnDefinition Width="380"/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="tableLabel" x:FieldModifier="public" Margin="10,10,10,10" TextWrapping="Wrap" Text="Ships" FontSize="36"/>
        <Button x:Name="pauseButton" x:FieldModifier="public" Content="Pause Simulation" Margin="10,10,10,50" FontSize="24" Click="pauseButton_Click" HorizontalAlignment="Stretch" Grid.RowSpan="2" VerticalAlignment="Stretch" Grid.Column="1"/>
        <Button x:Name="newHarborButton" x:FieldModifier="public" Grid.Column="2" Content="Start new harbor" FontSize="16" Margin="10,10,10,10" VerticalAlignment="Stretch" Click="newHarborButton_Click" HorizontalAlignment="Stretch"/>
        <CheckBox x:Name="runTreadedCheckBox" x:FieldModifier="public" Grid.Column="1" Content="Check to run the application multi-threaded" Margin="10,28,10,10" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsChecked="True"/>
        <Border Background="#FF2B2B2B" Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="1" Margin="10,0,10,468" Height="92">
            <TextBlock x:Name="eventLogTextBlock" x:FieldModifier="public" Margin="10,10,10,0"  FontSize="18" Height="72" VerticalAlignment="Top" Text="Update time"/>
        </Border>
        <TextBlock x:Name="dockingStationsLabel" x:FieldModifier="public" Grid.Column="1" HorizontalAlignment="Left" Margin="10,111,0,0" Grid.Row="2" TextWrapping="Wrap" Text="Dockingstations (number indicates ship ID)" VerticalAlignment="Top" FontSize="18" Width="370" Height="24"/>
        <StackPanel x:Name="dockingStationStackPanel" x:FieldModifier="public" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,150,10,10" Background="#FF2B2B2B" Grid.RowSpan="2" />
        <TextBlock x:Name="warehouseTextBlock" x:FieldModifier="public" Margin="10,10,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Warehouse" VerticalAlignment="Top" FontSize="24" HorizontalAlignment="Left" Width="119"/>
        <TextBlock x:Name="amountOfShipsTextBlock" x:FieldModifier="public" Grid.Column="2" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Amount of ships:" VerticalAlignment="Top"/>
        <TextBlock x:Name="amountOfDockingStationsTextBlock" x:FieldModifier="public" Grid.Column="2" HorizontalAlignment="Left" Margin="10,41,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Amount of dockingstations:" VerticalAlignment="Top" RenderTransformOrigin="0,0.158"/>
        <TextBox x:Name="amountOfDockingStationsTextBox" x:FieldModifier="public" Grid.Column="2" Margin="270,40,10,10" Grid.Row="1" TextWrapping="Wrap" Text="100" Height="20" Padding="2,2,2,2" FontSize="12"/>
        <TextBox x:Name="amountOfShipsTextBox" x:FieldModifier="public" Grid.Column="2" Margin="270,10,10,0" Grid.Row="1" TextWrapping="Wrap" Text="100" VerticalAlignment="Top" Height="20" Padding="2,2,2,2" FontSize="12"/>
    </Grid>
</Page>
